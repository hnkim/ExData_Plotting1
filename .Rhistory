a <- available.packages()
head(rownames(a), 3)
install.packages(c("slidify","ggplot2","devtools"))
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(ggplot2)
search()
install.packages("KernSmooth")
library(KernSmooth)
eixt
exit
getwd()
install.packages("XML", lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("data.table", lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("jsonlite", lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rattle", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
rattle()
install.packages("RGtk2", lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("RGtk2")
library("caret", lib.loc="/Users/rkim/Library/R/2.15/library")
library("rattle", lib.loc="/Users/rkim/Library/R/2.15/library")
rattle()
rattle()
install.packages(c("cluster", "foreign", "KernSmooth", "lattice", "Matrix", "mgcv", "nnet", "rpart", "survival"), lib="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
install.packages("RMySQL")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
close(con)
htmlCode
library(XML)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url, useInternalNodes=TRUE)
xpathSApply(html, "//title", xmlValue)
xmlValue[1]
xmlValue
html[1]
html
html[[1]]
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
?load
?library
library(httr)
example(httr)
example(GET)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html2 <- GET(url)
?content
content2 = content(html2, as="text")
parsedHtml = htmlParse(content2, asText=T)
?htmlParse
xpathSApply(parsedHtml, "//title", xmlValue)
pg1 <- GET("http://httpbin.org/basic-auth/user/passwd")
pg1
pg2 <- GET("http://httpbin.org/basic-auth/user/passwd",
authenticate("user","passwd")
)
pg2
names(pg2)
pg2[2]
pg2[1]
dim(pg2)
length(pg2)
pg2[1:8]
?handle
google <- handle("http://google.com")
google <- handle("http://www.google.com")
google1 <- handle("http://google.com")
pg1 <- GET(handle=google, path="/")
pg2 <- GET(handle=google, path="search")
?oauth_app
install.packages("twitteR")
install.packages("ROAuth")
myapp <- oauth_app("twitter",
key = "bUWPGmwWyn49I5v86ppbQmLsu",
secret = "YFeg6D9yiNjVfpUG73W0orvtqk79Je8PoH9I4iraucZHEoXCrh")
sig <- sign_oauth1.0(myapp,
token = "270031787-PXRWEK5RuwvdrXxPO1fcz2HKEpbkHhtnzc7pwdzC",
token_secret = "SGxhL6re7nuv9pQoTpDDZhYP1LKUuRHTKuPW9HBBeYAt4")
homeTL <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
homeTL
homeTL[1]
homeTL[2]
homeTL[3]
homeTL[4]
homeTL[5]
homeTL[6]
homeTL[7]
names(homeTL)
homeTL["content"]
names(homeTL)
?sentiment
??sentiment
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("sentiment")
install.packages("tm")
install.packages("Rstem")
a <- c(1,2,5.3,6,-2,4) # numeric vector
b <- c("one","two","three") # character vector
c <- c(TRUE,TRUE,TRUE,FALSE,TRUE,FALSE) #logical vector
a <- c(1,2,5.3,6,-2,4) # numeric vector
b <- c("one","two","three") # character vector
c <- c(TRUE,TRUE,TRUE,FALSE,TRUE,FALSE) #logical vector
class(c)
class(c(a:c))
class(a)
a[c(2,4)] # 2nd and 4th elements of vect
?matrix
y <- matrix(1:20, nrow = 5, ncol = 4)
dim(y)
y
x[ ,4]
x[2, ]
x[2:4,1:3]
x <- matrix(1:20, nrow = 5, ncol = 4)
dim(x)
x
x[ ,4]
x[2, ]
x[2:4,1:3]
help(array)
example(array)
head(letters)
class(letters)
help(matrix)
is.matrix(as.matrix(1:10))
!is.matrix(warpbreaks)
z <- warpbreaks
class(z)
head(z)
d <- c(1,2,3,4)
e <- c("red", "white", "red", NA)
f <- c(TRUE,TRUE,TRUE,FALSE)
mydata <- data.frame(d,e,f)
names(mydata) <- c("id", "color", "passed")
mydata
g <- c(T,T,T,F)
mydata <- cbind(mydata, g)
mydata
mydata <- mydata[, 1:3]
mydata
mydata <- cbind(mydata, "passed1" = g)
mydata
mydata[2:3]
?data.frame
mydata[2:3, ]
mydata[2:3]
mydata[ , 2:3]
mydata[c("id", "passed")]
mydata$color
gender <- c(rep("male",20), "female",30)
gender <- c(rep("male",20), rep("female",30))
gender <- factor(gender)
gender
summary(gender)
?ordered
ls()
?rm
search()
?search
rm(list = ls(all = TRUE))
general.help()
help()
help.startz()
help.start()
RSiteSearch("XML")
vignette()      # show available vingettes
?vignette
vignette("base") # show specific vignette
vignette("XML") # show specific vignette
vignette("rattle") # show specific vignette
vignette("xlsx") # show specific vignette
data()
help(cars)
getwd()
ls()    # list the objects in the current workspace
help(options) # learn about available options
options() # view current option settings
install.packages("Rserve")
example(Rserve)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "1239f243c5bd75894b45",
secret = "96cb29974ef97e98f42c516a39c903ba955a983a")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
setwd("~/Documents/Coursera/04_Exploratory Data Analysis/Projects/ExData_Plotting1")
setwd("~/Documents/Coursera/04_Exploratory Data Analysis/Projects/Project_1/data")
setwd("~/Documents/Coursera/04_Exploratory Data Analysis/Projects/ExData_Plotting1")
filepath <- "/Documents/Coursera/04_Exploratory Data Analysis/Projects/Project_1/data"
setwd("~/Documents/Coursera/04_Exploratory Data Analysis/Projects/ExData_Plotting1")
filepath <- "/Documents/Coursera/04_Exploratory Data Analysis/Projects/Project_1/data"
## Read Data
df <- read.table("filepath/household_power_consumption.txt", header = T, sep = ";", na.strings ="?",
colClasses = c("character", "character","numeric","numeric",
"numeric","numeric","numeric", "numeric", "numeric"))
df$Date <- as.Date(df$Date, "%d/%m/%Y")
df1 <- subset(df, df$Date %in% as.Date(c("2007-02-01","2007-02-02")))
df2 <- cbind(df1, date_time = strptime(paste(df1$Date, df1$Time), "%Y-%m-%d %H:%M:%S"))
rm(df, df1)
# Plot 1 - Historgram
par(bg = "transparent", cex = .8)
hist(df2$Global_active_power, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)")
dev.copy(png, file = "plot1.png") ## copy plot to a PNG file
dev.off()
setwd("~/Documents/Coursera/04_Exploratory Data Analysis/Projects/ExData_Plotting1")
filepath <- "/Documents/Coursera/04_Exploratory Data Analysis/Projects/Project_1/data"
df <- read.table("filepath/household_power_consumption.txt", header = T, sep = ";", na.strings ="?",
colClasses = c("character", "character","numeric","numeric",
"numeric","numeric","numeric", "numeric", "numeric"))
filepath <- "~/Documents/Coursera/04_Exploratory Data Analysis/Projects/Project_1/data"
df <- read.table("filepath/household_power_consumption.txt", header = T, sep = ";", na.strings ="?",
colClasses = c("character", "character","numeric","numeric",
"numeric","numeric","numeric", "numeric", "numeric"))
df <- read.table(paste(filepath,"/household_power_consumption.txt"),
header = T, sep = ";", na.strings ="?",
colClasses = c("character", "character","numeric","numeric",
"numeric","numeric","numeric", "numeric", "numeric"))
myfile <- "~/Documents/Coursera/04_Exploratory Data Analysis/Projects/Project_1/
data/household_power_consumption.txt"
df <- read.table(myfile, header = T, sep = ";", na.strings ="?",
colClasses = c("character", "character","numeric","numeric",
"numeric","numeric","numeric", "numeric", "numeric"))
df$Date <- as.Date(df$Date, "%d/%m/%Y")
df1 <- subset(df, df$Date %in% as.Date(c("2007-02-01","2007-02-02")))
df2 <- cbind(df1, date_time = strptime(paste(df1$Date, df1$Time), "%Y-%m-%d %H:%M:%S"))
rm(df, df1)
# Plot 1 - Historgram
par(bg = "transparent", cex = .8)
hist(df2$Global_active_power, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)")
dev.copy(png, file = "plot1.png") ## copy plot to a PNG file
dev.off()
df <- read.table(myfile, header = T, sep = ";", na.strings ="?",
colClasses = c("character", "character","numeric","numeric",
"numeric","numeric","numeric", "numeric", "numeric"))
myfile <- "~/Documents/Coursera/04_Exploratory Data Analysis/Projects/Project_1/data/household_power_consumption.txt"
df <- read.table(myfile, header = T, sep = ";", na.strings ="?",
colClasses = c("character", "character","numeric","numeric",
"numeric","numeric","numeric", "numeric", "numeric"))
df$Date <- as.Date(df$Date, "%d/%m/%Y")
df1 <- subset(df, df$Date %in% as.Date(c("2007-02-01","2007-02-02")))
df2 <- cbind(df1, date_time = strptime(paste(df1$Date, df1$Time), "%Y-%m-%d %H:%M:%S"))
rm(df, df1)
# Plot 1 - Historgram
par(bg = "transparent", cex = .8)
hist(df2$Global_active_power, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)")
dev.copy(png, file = "plot1.png") ## copy plot to a PNG file
dev.off()
par(bg= "transparent", cex = .8)
hist(df2$Global_active_power, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)")
dev.copy(png, file = "plot1.png") ## copy plot to a PNG file
dev.off()
par(bg= "transparent", cex = .8)
plot(df2$date_time,df2$Global_active_power, type="n", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(df2$date_time,df2$Global_active_power, type="l")
dev.copy(png, file = "plot2.png") ## copy plot to a PNG file
dev.off()
source('~/.active-rstudio-document', echo=TRUE)
par(bg= "transparent", cex = .8)
hist(df2$Global_active_power, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)")
dev.copy(png, file = "plot1.png") ## copy plot to a PNG file
dev.off()
par(bg= "transparent", cex = .8)
hist(df2$Global_active_power, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)")
dev.copy(png, file = "plot1.png") ## copy plot to a PNG file
dev.off()
par(bg= "transparent", cex = .8)
plot(df2$date_time,df2$Global_active_power, type="n", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(df2$date_time,df2$Global_active_power, type="l")
dev.copy(png, file = "plot2.png") ## copy plot to a PNG file
dev.off()
par(bg= "transparent", cex = .8)
plot(df2$date_time,df2$Sub_metering_1, type="n", xlab = "", ylab = "Energy sub metering")
lines(df2$date_time,df2$Sub_metering_1, type="l")
lines(df2$date_time,df2$Sub_metering_2, type="l", col = "red")
lines(df2$date_time,df2$Sub_metering_3, type="l", col = "blue")
legend("topright", lty = c(1,1,1), col = c("black", "blue", "red"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file = "plot3.png") ## copy plot to a PNG file
dev.off()
# Plot 4 - Multi Frame Plots
par(mfrow = c(2,2),  mar = c(4, 4, 2, 1), bg= "transparent", cex=.7)
#R1-1
plot(df2$date_time,df2$Global_active_power, type="n", xlab = "", ylab = "Global Active Power")
lines(df2$date_time,df2$Global_active_power)
#R1-2
plot(df2$date_time,df2$Voltage, type="n", xlab = "datetime", ylab = "Voltage")
lines(df2$date_time,df2$Voltage)
#R2-1
plot(df2$date_time,df2$Sub_metering_1, type="n", xlab = "", ylab = "Energy sub metering")
lines(df2$date_time,df2$Sub_metering_1, type="l")
lines(df2$date_time,df2$Sub_metering_2, type="l", col = "red")
lines(df2$date_time,df2$Sub_metering_3, type="l", col = "blue")
legend("topright", bty="n", lty = c(1,1,1), col = c("black", "blue", "red"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#R2-2
plot(df2$date_time,df2$Global_reactive_power, type="n", xlab = "datetime", ylab = "Global_reacctive_power")
lines(df2$date_time,df2$Global_reactive_power)
dev.copy(png, file = "plot4.png") ## copy plot to a PNG file
dev.off()
